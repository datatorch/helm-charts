{{- if .Values.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "datatorch.fullname" . }}-ingress
  labels:
    {{- include "datatorch.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
    ingressclass.kubernetes.io/is-default-class: "true"
  {{- end }}
spec:
{{- if .Values.ingress.tls }}
  controller: k8s.io/ingress-nginx
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: {{ include "datatorch.fullname" . }}-api
            port:
              number: 80
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ include "datatorch.fullname" . }}-webclient
            port: 
              number: 80
  {{- if .Values.ingress.extraRules }}
  {{- toYaml .Values.ingress.extraRules | nindent 2 }}
  {{- end }}

{{- end }}
